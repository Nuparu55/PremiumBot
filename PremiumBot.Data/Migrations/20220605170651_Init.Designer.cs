// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremiumBot.Data;

#nullable disable

namespace PremiumBot.Data.Migrations
{
    [DbContext(typeof(BotDBContext))]
    [Migration("20220605170651_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("AchievmentUser", b =>
                {
                    b.Property<int>("AchievmentsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AchievmentsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AchievmentUser");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Achievment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConditionCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUniq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Achievments");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defence")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthRecovery")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HeroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HeroId")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Juice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnergyRecharge")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Juices");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rare")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorCoins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContactsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilesCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fragments")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeopositionsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImagesCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PoolsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReactionsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RedirectCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReplyCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StickersCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TGID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AchievmentUser", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Achievment", null)
                        .WithMany()
                        .HasForeignKey("AchievmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremiumBot.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Armor", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Inventory", null)
                        .WithMany("Armors")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Food", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Inventory", null)
                        .WithMany("Foods")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Hero", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.User", "User")
                        .WithOne("Hero")
                        .HasForeignKey("PremiumBot.Data.Models.Hero", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Inventory", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Hero", "Hero")
                        .WithOne("Inventory")
                        .HasForeignKey("PremiumBot.Data.Models.Inventory", "HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Juice", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Inventory", null)
                        .WithMany("Juices")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.User", b =>
                {
                    b.HasOne("PremiumBot.Data.Models.Title", null)
                        .WithMany("Users")
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Hero", b =>
                {
                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Inventory", b =>
                {
                    b.Navigation("Armors");

                    b.Navigation("Foods");

                    b.Navigation("Juices");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.Title", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PremiumBot.Data.Models.User", b =>
                {
                    b.Navigation("Hero")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
